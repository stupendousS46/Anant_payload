# -*- coding: utf-8 -*-
"""IRIS

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IqvoNtPy7vNTRvWSqpfNFOKQ-vTgbqai
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from google.colab import drive
drive.mount('/content/drive')

df = pd.read_csv('/content/drive/MyDrive/IRIS.csv')

df.head(50)

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# Basic statistics
print(df.describe())

sns.pairplot(df, hue='species')
plt.show()

# Separate features and target
X = df.iloc[:, :-1]  # All rows, all columns except the last
y = df['species']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize and train the model
model = LogisticRegression(max_iter=200)
model.fit(X_train, y_train)

# Predict on test data
y_pred = model.predict(X_test)

# Accuracy
print("Accuracy:", accuracy_score(y_test, y_pred))

# Classification report
print(classification_report(y_test, y_pred))

# Confusion matrix
cm = confusion_matrix(y_test, y_pred)
sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=model.classes_, yticklabels=model.classes_)
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix')
plt.show()

# Example: Predict species for a new sample
sample = np.array([[4.6, 3.3, 1.6, 0.3]])
# Replace with your own measurements
prediction = model.predict(sample)
print("Predicted class:", prediction[0])